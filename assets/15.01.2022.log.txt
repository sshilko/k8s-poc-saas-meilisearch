sshilko@sshilko-pc:~/dummy/dream/dune/fort $ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ bash 00_cluster.up.sh 
Now is Sun Jan 16 18:03:27 CET 2022

   Static hostname: sshilko-pc
         Icon name: computer-laptop
           Chassis: laptop
        Machine ID: b9345171accd4bbdb68fb20877168a24
           Boot ID: fea2ff0e2bb64bae93b22fa1c1d39b71
  Operating System: Ubuntu 18.04.6 LTS
            Kernel: Linux 5.4.0-91-generic
      Architecture: x86-64
Client Version: version.Info{Major:"1", Minor:"23", GitVersion:"v1.23.1", GitCommit:"86ec240af8cbd1b60bcc4c03c20da9b98005b92e", GitTreeState:"clean", BuildDate:"2021-12-16T11:41:01Z", GoVersion:"go1.17.5", Compiler:"gc", Platform:"linux/amd64"}
Creating cluster "cluster0" ...
 ‚úì Ensuring node image (kindest/node:v1.21.1) üñº
 ‚úì Preparing nodes üì¶ üì¶ üì¶  
 ‚úì Writing configuration üìú 
 ‚úì Starting control-plane üïπÔ∏è 
 ‚úì Installing CNI üîå 
 ‚úì Installing StorageClass üíæ 
 ‚úì Joining worker nodes üöú 
 ‚úì Waiting ‚â§ 1m30s for control-plane = Ready ‚è≥ 
 ‚Ä¢ Ready after 0s üíö
Set kubectl context to "kind-cluster0"
You can now use your cluster with:

kubectl cluster-info --context kind-cluster0

Have a nice day! üëã
Cluster created ...
namespace/kubernetes-dashboard created
serviceaccount/kubernetes-dashboard created
service/kubernetes-dashboard created
secret/kubernetes-dashboard-certs created
secret/kubernetes-dashboard-csrf created
secret/kubernetes-dashboard-key-holder created
configmap/kubernetes-dashboard-settings created
role.rbac.authorization.k8s.io/kubernetes-dashboard created
clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created
rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created
clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created
deployment.apps/kubernetes-dashboard created
service/dashboard-metrics-scraper created
deployment.apps/dashboard-metrics-scraper created
namespace/kubernetes-dashboard unchanged
serviceaccount/kubernetes-dashboard unchanged
service/kubernetes-dashboard unchanged
secret/kubernetes-dashboard-certs unchanged
secret/kubernetes-dashboard-csrf unchanged
secret/kubernetes-dashboard-key-holder unchanged
configmap/kubernetes-dashboard-settings unchanged
role.rbac.authorization.k8s.io/kubernetes-dashboard unchanged
clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard unchanged
rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard unchanged
clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard unchanged
deployment.apps/kubernetes-dashboard unchanged
service/dashboard-metrics-scraper unchanged
deployment.apps/dashboard-metrics-scraper unchanged
serviceaccount/admin-user created
clusterrolebinding.rbac.authorization.k8s.io/admin-user created
K8S Dashboard available with 'kubectl proxy' at http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login
K8S Dashboard ServiceAccount: admin-user-token-2554q
K8S Dashboard Secret: eyJhbGciOiJSUzI1NiIsImtpZCI6Im5ObVFmTHY2Q0R4SXhtLTJjemlHNjA3RXFreE5ZQmRiT1c4WFFxUVhIZkkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLTI1NTRxIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIxNTQ4NDI0Zi1jM2ZiLTQ5NWEtYTA0MS1lMzk0MTY4YTBkYmMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.mw_0jirBrJb1ahqNizemLLq6574Uez36k8EYJ1eOf7bXiw_sz9ZGqECIQkzs1x9foUqJQVsBmCEKc2qxH-dQyXn8KkLpYIdrFSbTI_PvFuUELlvzjY7JEek5X2S-U8agjYUoBXW468ukyT4ysem1iqlOIfNIsVTmWjTmngLhzFIGtf-dmm17BDfxt98kqYSDUB_24LE3AXBy8nchKweXlqrHm3Aj3Uar26RwZfu2pCkDxz2OIvQvOyY37VCLdspqdj9uwbqGYnyHFYgnGSDuK98LVU8P7xkS_7oJ85tvwTfZL3xjVyUQfiS_TUz9jeD5y3ZiRQUt2jzGBQWmbDg4ZQ
Kubernetes control plane is running at https://127.0.0.1:6443
CoreDNS is running at https://127.0.0.1:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
NAME                   STATUS   AGE
default                Active   39s
kube-node-lease        Active   41s
kube-public            Active   41s
kube-system            Active   41s
kubernetes-dashboard   Active   2s
local-path-storage     Active   35s
K8S Cluster up
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 




sshilko@sshilko-pc:~/dummy/dream/dune/fort $ bash 01_saas.meilisearch.up.sh user1
namespace/ns-user1 created
serviceaccount/meilisearch created
configmap/meilisearch-environment created
statefulset.apps/meilisearch created
service/ns-user1-meilisearch created
pod/meilisearch-0 condition met
NAME            READY   STATUS    RESTARTS   AGE
meilisearch-0   1/1     Running   0          20s
NAME                   TYPE           CLUSTER-IP   EXTERNAL-IP                   PORT(S)    AGE
ns-user1-meilisearch   ExternalName   <none>       ns-user1.meilisearch.frb.io   7700/TCP   20s
*   Trying 127.0.0.1:7700...
* Connected to 127.0.0.1 (127.0.0.1) port 7700 (#0)
> GET /health HTTP/1.1
> Host: 127.0.0.1:7700
> User-Agent: curl/7.79.1
> Accept: */*
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< content-length: 22
< content-type: application/json
< date: Sun, 16 Jan 2022 17:05:29 GMT
< 
* Connection #0 to host 127.0.0.1 left intact
{"status":"available"}"meilisearch-0 10.244.2.2 ns-user1"
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 




sshilko@sshilko-pc:~/dummy/dream/dune/fort $ bash 01_saas.meilisearch.up.sh user2
namespace/ns-user2 created
serviceaccount/meilisearch created
configmap/meilisearch-environment created
statefulset.apps/meilisearch created
service/ns-user2-meilisearch created
pod/meilisearch-0 condition met
NAME            READY   STATUS    RESTARTS   AGE
meilisearch-0   1/1     Running   0          20s
NAME                   TYPE           CLUSTER-IP   EXTERNAL-IP                   PORT(S)    AGE
ns-user2-meilisearch   ExternalName   <none>       ns-user2.meilisearch.frb.io   7700/TCP   20s
*   Trying 127.0.0.1:7700...
* Connected to 127.0.0.1 (127.0.0.1) port 7700 (#0)
> GET /health HTTP/1.1
> Host: 127.0.0.1:7700
> User-Agent: curl/7.79.1
> Accept: */*
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< content-length: 22
< content-type: application/json
< date: Sun, 16 Jan 2022 17:06:06 GMT
< 
* Connection #0 to host 127.0.0.1 left intact
{"status":"available"}"meilisearch-0 10.244.2.2 ns-user1"
"meilisearch-0 10.244.1.2 ns-user2"


sshilko@sshilko-pc:~/dummy/dream/dune/fort $ bash 01_saas.meilisearch.up.sh user3
namespace/ns-user3 created
serviceaccount/meilisearch created
configmap/meilisearch-environment created
statefulset.apps/meilisearch created
service/ns-user3-meilisearch created
pod/meilisearch-0 condition met
NAME            READY   STATUS    RESTARTS   AGE
meilisearch-0   1/1     Running   0          20s
NAME                   TYPE           CLUSTER-IP   EXTERNAL-IP                   PORT(S)    AGE
ns-user3-meilisearch   ExternalName   <none>       ns-user3.meilisearch.frb.io   7700/TCP   20s
*   Trying 127.0.0.1:7700...
* Connected to 127.0.0.1 (127.0.0.1) port 7700 (#0)
> GET /health HTTP/1.1
> Host: 127.0.0.1:7700
> User-Agent: curl/7.79.1
> Accept: */*
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< content-length: 22
< content-type: application/json
< date: Sun, 16 Jan 2022 17:06:48 GMT
< 
* Connection #0 to host 127.0.0.1 left intact
{"status":"available"}"meilisearch-0 10.244.2.2 ns-user1"
"meilisearch-0 10.244.1.2 ns-user2"
"meilisearch-0 10.244.2.3 ns-user3"
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ bash 01_saas.meilisearch.up.sh user4
namespace/ns-user4 created
serviceaccount/meilisearch created
configmap/meilisearch-environment created
statefulset.apps/meilisearch created
service/ns-user4-meilisearch created
pod/meilisearch-0 condition met
NAME            READY   STATUS    RESTARTS   AGE
meilisearch-0   1/1     Running   0          20s
NAME                   TYPE           CLUSTER-IP   EXTERNAL-IP                   PORT(S)    AGE
ns-user4-meilisearch   ExternalName   <none>       ns-user4.meilisearch.frb.io   7700/TCP   20s
*   Trying 127.0.0.1:7700...
* Connected to 127.0.0.1 (127.0.0.1) port 7700 (#0)
> GET /health HTTP/1.1
> Host: 127.0.0.1:7700
> User-Agent: curl/7.79.1
> Accept: */*
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< content-length: 22
< content-type: application/json
< date: Sun, 16 Jan 2022 17:07:47 GMT
< 
* Connection #0 to host 127.0.0.1 left intact
{"status":"available"}"meilisearch-0 10.244.2.2 ns-user1"
"meilisearch-0 10.244.1.2 ns-user2"
"meilisearch-0 10.244.2.3 ns-user3"
"meilisearch-0 10.244.1.3 ns-user4"
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 
sshilko@sshilko-pc:~/dummy/dream/dune/fort $ 
kubectl get pod --all-namespaces -o json | jq '.items[] | .metadata.name + " " +.status.podIP + " " + .metadata.namespace' |grep meilisearch
"meilisearch-0 10.244.2.2 ns-user1"
"meilisearch-0 10.244.1.2 ns-user2"
"meilisearch-0 10.244.2.3 ns-user3"
"meilisearch-0 10.244.1.3 ns-user4"





sshilko@sshilko-pc:~/dummy/dream/dune/fort $ bash 03_cluster.down.sh 
Deleting cluster "cluster0" ...



